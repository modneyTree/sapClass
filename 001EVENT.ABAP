USER_COMMAND (OK_CODE로 작동)
    TOOLBAR에 아이콘 만들고 -> 
    - APPEND 기능
    - SAVE 기능
    주의사항
    - REFRESH 기능이 필요하다.

CLASS EVENT 만드는 방법
1. 클래스 생성- 정의부
2. 실행부, 실행부 PERFORM 생성
3. 객체 변수 생성
    DATA : 객체명 TYPE REF TO 클래스명
4. 객체 생성
    CREATE OBJECT 객체명
5. HANDLER 선언
    DATA : HANDLER명 TYPE REF TO 클래스명
    CREATE OBJECT 객체 명
    SET HANDLER HANDLER명->메소드명 FOR GC_GRID

1. INCLUDE 생성
2. EVENT 확인
3. 정의부 생성
4. 실행부 생성
5. 실행부 PERFORM 생성
6. EVENT 변수 생성
7. EVENT 객체 생성
8. HANDLER 생성(등록)


예제(039)
1. INCLUDE 생성
2. EVENT 확인
3. 정의부 생성
CLASS EVENT DEFINITION.
    PUBLIC SECTION.
    METHODS HANDLER_TOOLBAR FOR EVENT TOOLBAR OF CL_GUI_ALV_GRID IMPORTING E_OBJECT E_INTERACTIVE.
  
    METHODS HANDLER_USER_COMMAND FOR EVENT USER_COMMAND OF CL_GUI_ALV_GRID IMPORTING E_UCOMM.
  
  ENDCLASS.
4. 실행부 생성
CLASS EVENT IMPLEMENTATION.

    METHOD HANDLER_TOOLBAR.
      PERFORM ALV_HANDLER_TOOLBAR USING E_OBJECT E_INTERACTIVE.
    ENDMETHOD.
  
    METHOD HANDLER_USER_COMMAND.
      PERFORM ALV_HANDLER_USER_COMMAND USING E_UCOMM.
    ENDMETHOD.
  
ENDCLASS.

5. 실행부 PERFORM 생성
FORM ALV_HANDLER_TOOLBAR  USING    P_OBJECT TYPE REF TO CL_ALV_EVENT_TOOLBAR_SET
                                   P_INTERACTIVE.
  DATA : LS_TOOLBAR TYPE STB_BUTTON.    "

  LS_TOOLBAR-FUNCTION = 'TEXT'.
  LS_TOOLBAR-ICON = ICON_CHECKED.
  LS_TOOLBAR-QUICKINFO = 'INFORMATION'.

  APPEND LS_TOOLBAR TO P_OBJECT->MT_TOOLBAR.

ENDFORM.

FORM ALV_HANDLER_USER_COMMAND  USING    P_UCOMM.

    CASE P_UCOMM.
      WHEN 'TEXT'.
        MESSAGE '학생정보데이터입니다' TYPE 'I'.
    ENDCASE.
  
ENDFORM.

6. EVENT 변수 생성
"EVENT
DATA : GO_EVENT TYPE REF TO EVENT.

7. EVENT 객체 생성

8. HANDLER 생성(등록)
FORM CLASS_EVENT .

    CREATE OBJECT GO_EVENT.
  
    SET HANDLER GO_EVENT->HANDLER_TOOLBAR FOR GC_GRID.
    SET HANDLER GO_EVENT->HANDLER_USER_COMMAND FOR GC_GRID.
ENDFORM.


에제(040) HOTSPOT, DOUBLE CLICK
1. INCLUDE 생성
2. EVENT 확인
3. 정의부 생성
CLASS EVENT DEFINITION.
    PUBLIC SECTION.

    METHODS HANDLER_HOTSPOT_CLICK FOR EVENT HOTSPOT_CLICK OF CL_GUI_ALV_GRID IMPORTING E_ROW_ID E_COLUMN_ID ES_ROW_NO.  "

    METHODS HANDLER_DOUBLE_CLICK FOR EVENT DOUBLE_CLICK OF CL_GUI_ALV_GRID IMPORTING E_ROW E_COLUMN ES_ROW_NO.

ENDCLASS.

4. 실행부 생성
CLASS EVENT IMPLEMENTATION.

    METHOD HANDLER_HOTSPOT_CLICK.
      PERFORM ALV_HANDLER_HOTSPOT_CLICK USING E_ROW_ID E_COLUMN_ID ES_ROW_NO.
    ENDMETHOD.

    METHOD HANDLER_DOUBLE_CLICK.
      PERFORM ALV_HANDLER_DOUBLE_CLICK USING E_ROW E_COLUMN ES_ROW_NO.
    ENDMETHOD.

ENDCLASS.

5. 실행부 PERFORM 생성
FORM ALV_HANDLER_HOTSPOT_CLICK  USING    P_ROW_ID TYPE LVC_S_ROW
                                         P_COLUMN_ID TYPE LVC_S_COL
                                         P_ROW_NO TYPE LVC_S_ROID.
    "HOTSPOT 기능
    CASE P_COLUMN_ID-FIELDNAME.
    WHEN 'ZCODE'.
        READ TABLE GT_STUDENT INTO GS_STUDENT INDEX P_ROW_NO-ROW_ID.
        SET PARAMETER ID 'XUS' FIELD GS_STUDENT-ZCODE.
        CALL TRANSACTION 'SU01'.
    ENDCASE.

ENDFORM.

6. EVENT 변수 생성

7. EVENT 객체 생성

8. HANDLER 생성(등록)
FORM CLASS_EVENT .

    CREATE OBJECT GO_EVENT.
  
    SET HANDLER GO_EVENT->HANDLER_HOTSPOT_CLICK FOR GC_GRID.
    SET HANDLER GO_EVENT->HANDLER_DOUBLE_CLICK FOR GC_GRID.
  
ENDFORM.


예제(042) DATA_CHANGED
1. INCLUDE 생성
2. EVENT 확인
    REGISTER_EDIT_EVENT를 통해 : 
    MC_EVT_MODIFIED : DATA_CHANGED 이벤트 발생,
        셀 클릭, ENTER, TAB 모든 시점에 DATA_CHANGED 이벤트 발생
    이벤트 : DATA_CHANGED :
        ER_DATA_CHANGED : 변경된 데이터
        E_ONF4 : F4 키 눌렀을 때
        E_ONF4_BEFORE : F4 키 누르기 전
        E_ONF4_AFTER : F4 키 누른 후
        E_UCOMM : 사용자 명령
    속성
    MT_GOOD_CELLS : 변경된 셀의 정보, LVC_S_MODI 타입
        FIELDNAME : 변경된 필드명
        ROW_ID : 변경된 행의 인덱스
        VALUE : 변경된 값
3. 정의부 생성
CLASS EVENT DEFINITION.
  
    METHODS HANDLER_DATA_CHANGED FOR EVENT DATA_CHANGED
                                 OF CL_GUI_ALV_GRID
                                 IMPORTING ER_DATA_CHANGED
                                           E_ONF4
                                           E_ONF4_BEFORE
                                           E_ONF4_AFTER
                                           E_UCOMM.
  
    METHODS HANDLER_DATA_CHANGED_FINISHED FOR EVENT DATA_CHANGED_FINISHED OF CL_GUI_ALV_GRID IMPORTING E_MODIFIED ET_GOOD_CELLS.
  
  
ENDCLASS.

4. 실행부 생성
CLASS EVENT IMPLEMENTATION.
  
    METHOD HANDLER_DATA_CHANGED.
      PERFORM ALV_HANDLER_DATA_CHANGED USING ER_DATA_CHANGED
                                             E_ONF4
                                             E_ONF4_BEFORE
                                             E_ONF4_AFTER
                                             E_UCOMM.
      ENDMETHOD.
  
    METHOD HANDLER_DATA_CHANGED_FINISHED.
      PERFORM ALV_DATA_CHANGED_FINISHED USING E_MODIFIED ET_GOOD_CELLS.
    ENDMETHOD.
  
ENDCLASS.

5. 실행부 PERFORM 생성
FORM ALV_HANDLER_DATA_CHANGED USING P_DATA_CHANGED TYPE REF TO CL_ALV_CHANGED_DATA_PROTOCOL
                                    P_ONF4
                                    P_ONF4_BEFORE
                                    P_ONF4_AFTER
                                    P_UCOMM.

  DATA LS_MODI TYPE LVC_S_MODI.
  DATA LV_LEN(02).

  CLEAR : LS_MODI, LV_LEN.

  LOOP AT P_DATA_CHANGED->MT_GOOD_CELLS INTO LS_MODI.
    IF LS_MODI-FIELDNAME = 'ZTEL'.
      READ TABLE GT_STUDENT INTO GS_STUDENT INDEX LS_MODI-ROW_ID.

      IF LS_MODI-VALUE IS INITIAL.
        GS_STUDENT-ZCOLOR = ICON_LED_RED.
      ELSE.
        LV_LEN = STRLEN( LS_MODI-VALUE ).
        IF LV_LEN = '10'.
          GS_STUDENT-ZCOLOR = ICON_LED_GREEN.
        ELSE.
          GS_STUDENT-ZCOLOR = ICON_LED_YELLOW.
        ENDIF.
      ENDIF.

      MODIFY GT_STUDENT FROM GS_STUDENT INDEX LS_MODI-ROW_ID.
      CLEAR GS_STUDENT.
    ENDIF.
  ENDLOOP.

  PERFORM REFRESH.
ENDFORM.

FORM ALV_DATA_CHANGED_FINISHED  USING    P_MODIFIED
                                         PT_GOOD_CELLS TYPE LVC_T_MODI.
  "MT_GOOD_CELLS TYPE LVC_T_MODI
  "LVC_T_MODI TYPE LVC_S_MODI
  "LVC_S_MODI->FILEDNAME(필드제어), ROW_ID(인덱스제어), VALUE(값제어)
  DATA : LS_MODI TYPE LVC_S_MODI.

  CLEAR : LS_MODI.

  LOOP AT PT_GOOD_CELLS INTO LS_MODI.
    IF LS_MODI-FIELDNAME = 'ZTEL'.
      READ TABLE GT_STUDENT INTO GS_STUDENT INDEX LS_MODI-ROW_ID.

      IF GS_STUDENT-ZCOLOR NE ICON_LED_GREEN.
        DELETE TABLE GT_STUDENT FROM GS_STUDENT.
      ENDIF.

      CLEAR GS_STUDENT.
    ENDIF.
  ENDLOOP.

ENDFORM.

6. EVENT 변수 생성

7. EVENT 객체 생성

8. HANDLER 생성(등록)
FORM CLASS_EVENT .
  
    CALL METHOD GC_GRID->REGISTER_EDIT_EVENT
      EXPORTING
        I_EVENT_ID = CL_GUI_ALV_GRID=>MC_EVT_MODIFIED
  *    EXCEPTIONS
  *      ERROR      = 1
  *      others     = 2
            .
    IF SY-SUBRC <> 0.
  *   Implement suitable error handling here
    ENDIF.
  
  
    SET HANDLER GO_EVENT->HANDLER_DATA_CHANGED FOR GC_GRID.
ENDFORM.