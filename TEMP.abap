FORM GDIR_DATA . "입고 데이터 저장

  DATA: LV_ZINVOICE_NO     TYPE ZEDT20_P008-ZINVOICE_NO,
        LV_ZINVOICE_NUM    TYPE I,
        LV_ZBELNR          TYPE ZEDT20_P010-ZBELNR,
        LV_ZBELNR_NUM      TYPE I.

  " 1) ZINVOICE_NO 최대값 가져오기
  SELECT MAX( ZINVOICE_NO ) INTO LV_ZINVOICE_NO FROM ZEDT20_P008.

  IF SY-SUBRC <> 0 OR LV_ZINVOICE_NO IS INITIAL.
    LV_ZINVOICE_NUM = 1.
  ELSE.
    LV_ZINVOICE_NUM = LV_ZINVOICE_NO.
    LV_ZINVOICE_NUM = LV_ZINVOICE_NUM + 1.
  ENDIF.

  " 정수를 문자열로 변환 (길이 10 가정)
  WRITE LV_ZINVOICE_NUM TO LV_ZINVOICE_NO(10).

  " ALPHA 변환 (0000000001 형태로 맞추기 위해)
  CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
    EXPORTING
      INPUT  = LV_ZINVOICE_NO
    IMPORTING
      OUTPUT = LV_ZINVOICE_NO.

  " 2) ZBELNR 최대값 가져오기
  SELECT MAX( ZBELNR ) INTO LV_ZBELNR FROM ZEDT20_P010.

  IF SY-SUBRC <> 0 OR LV_ZBELNR IS INITIAL.
    LV_ZBELNR_NUM = 1.
  ELSE.
    LV_ZBELNR_NUM = LV_ZBELNR.
    LV_ZBELNR_NUM = LV_ZBELNR_NUM + 1.
  ENDIF.

  " 정수를 문자열로 변환 (길이 10 가정)
  WRITE LV_ZBELNR_NUM TO LV_ZBELNR(10).

  " ALPHA 변환 (0000000001 형태로 맞추기 위해)
  CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
    EXPORTING
      INPUT  = LV_ZBELNR
    IMPORTING
      OUTPUT = LV_ZBELNR.

  " 부분 입고 구현 : GT_PO_OUTPUT_ALV 의 해당 줄을 제거한다.
  " ZCHECKBOX = 'X'인 경우 -> 입고 헤더, 아이템, 지급 테이블에 저장
  LOOP AT GT_PO_OUTPUT_ALV INTO GS_PO_OUTPUT_ALV WHERE ZCHECKBOX = 'X'.

    " 1. 입고 헤더 데이터 저장
    CLEAR GS_IR_HEAD_SAVE.
    GS_IR_HEAD_SAVE-ZINVOICE_NO = LV_ZINVOICE_NO.
*    GS_IR_HEAD_SAVE-BUKRS       = GS_PO_OUTPUT_ALV-BUKRS.
    GS_IR_HEAD_SAVE-EBELN       = GS_PO_OUTPUT_ALV-EBELN.
    GS_IR_HEAD_SAVE-ZBLDAT      = SY-DATUM.       " 증빙일
    GS_IR_HEAD_SAVE-ZBUDAT      = SY-DATUM.       " 전기일
    GS_IR_HEAD_SAVE-ZGJAHR      = SY-DATUM+0(4). " 회계연도 (연도 추출 예시)
    GS_IR_HEAD_SAVE-LIFNR       = GS_PO_OUTPUT_ALV-LIFNR.
    APPEND GS_IR_HEAD_SAVE TO GT_IR_HEAD_SAVE.

    " 2. 입고 아이템 데이터 저장
    CLEAR GS_IR_ITEM_SAVE.
    GS_IR_ITEM_SAVE-ZINVOICE_NO = LV_ZINVOICE_NO.
*    GS_IR_ITEM_SAVE-BUKRS       = GS_PO_OUTPUT_ALV-BUKRS.
    GS_IR_ITEM_SAVE-EBELN       = GS_PO_OUTPUT_ALV-EBELN.
    GS_IR_ITEM_SAVE-ZWERKS      = GS_PO_OUTPUT_ALV-ZWERKS.
*    GS_IR_ITEM_SAVE-DMBTR        = GS_PO_OUTPUT_ALV-DMBTR.
*    GS_IR_ITEM_SAVE-MWSTS        = GS_PO_OUTPUT_ALV-MWSTS.
*    GS_IR_ITEM_SAVE-WRBTR        = GS_PO_OUTPUT_ALV-WRBTR.
    GS_IR_ITEM_SAVE-WAERS        = GS_PO_OUTPUT_ALV-WAERS.
*    GS_IR_ITEM_SAVE-ZLFM1_MWSKZ  = GS_PO_OUTPUT_ALV-ZLFM1_MWSKZ.
    GS_IR_ITEM_SAVE-ZBELNR       = LV_ZBELNR.
    GS_IR_ITEM_SAVE-ZBLART       = 'WE'.                " 전표유형
    GS_IR_ITEM_SAVE-ZLFA1_LIFNR  = GS_PO_OUTPUT_ALV-LIFNR.
    APPEND GS_IR_ITEM_SAVE TO GT_IR_ITEM_SAVE.

    " 3. 지급 데이터 저장
    CLEAR GS_PAY_SAVE.
*    GS_PAY_SAVE-BUKRS         = GS_PO_OUTPUT_ALV-BUKRS.
    GS_PAY_SAVE-ZLFA1_LIFNR   = GS_PO_OUTPUT_ALV-LIFNR.
    GS_PAY_SAVE-ZGJAHR        = SY-DATUM+0(4).      " 회계연도 (연도 추출 예시)
    GS_PAY_SAVE-ZBELNR        = LV_ZBELNR.
    GS_PAY_SAVE-ZBLDAT        = SY-DATUM.            " 증빙일
    GS_PAY_SAVE-ZBUDAT        = SY-DATUM.            " 전기일
    GS_PAY_SAVE-WAERS         = GS_PO_OUTPUT_ALV-WAERS.
    GS_PAY_SAVE-ZBLART        = 'WE'.                " 전표유형
    GS_PAY_SAVE-SHKZG         = 'H'.                 " 차변대변
*    GS_PAY_SAVE-ZLFM1_MWSKZ   = GS_PO_OUTPUT_ALV-ZLFM1_MWSKZ.
*    GS_PAY_SAVE-DMBTR         = GS_PO_OUTPUT_ALV-DMBTR.
*    GS_PAY_SAVE-MWSTS         = GS_PO_OUTPUT_ALV-MWSTS.
    GS_PAY_SAVE-SGTXT         = '입고 지급'.          " 텍스트 (적절히 수정)
    GS_PAY_SAVE-EBELN         = GS_PO_OUTPUT_ALV-EBELN.
    GS_PAY_SAVE-ZFBDT         = SY-DATUM.            " 지급기산일
    APPEND GS_PAY_SAVE TO GT_PAY_SAVE.

  ENDLOOP.

  " 데이터베이스에 저장
  IF LINES( GT_IR_HEAD_SAVE ) > 0 AND
     LINES( GT_IR_ITEM_SAVE ) > 0 AND
     LINES( GT_PAY_SAVE ) > 0.

    " 1. 입고 헤더 테이블 저장
    LOOP AT GT_IR_HEAD_SAVE INTO GS_IR_HEAD_SAVE.
      INSERT ZEDT20_P008 FROM GS_IR_HEAD_SAVE.
      IF SY-SUBRC <> 0.
        MESSAGE '입고 헤더 저장 실패' TYPE 'E'.
        EXIT.
      ENDIF.
    ENDLOOP.

    " 2. 입고 아이템 테이블 저장
    LOOP AT GT_IR_ITEM_SAVE INTO GS_IR_ITEM_SAVE.
      INSERT ZEDT20_P009 FROM GS_IR_ITEM_SAVE.
      IF SY-SUBRC <> 0.
        MESSAGE '입고 아이템 저장 실패' TYPE 'E'.
        EXIT.
      ENDIF.
    ENDLOOP.

    " 3. 지급 테이블 저장
    LOOP AT GT_PAY_SAVE INTO GS_PAY_SAVE.
      INSERT ZEDT20_P010 FROM GS_PAY_SAVE.
      IF SY-SUBRC <> 0.
        MESSAGE '지급 데이터 저장 실패' TYPE 'E'.
        EXIT.
      ENDIF.
    ENDLOOP.

    " 4. ZEDT20_P005의 IRSTATUS를 2로 업데이트
    LOOP AT GT_PO_OUTPUT_ALV INTO GS_PO_OUTPUT_ALV WHERE ZCHECKBOX = 'X'.
      UPDATE ZEDT20_P005
        SET IRSTATUS = '2'
        WHERE EBELN = GS_PO_OUTPUT_ALV-EBELN
          AND EBELP = GS_PO_OUTPUT_ALV-EBELP.

      IF SY-SUBRC <> 0.
        MESSAGE 'ZEDT20_P005 업데이트 실패' TYPE 'E'.
        EXIT.
      ENDIF.
    ENDLOOP.

    " 5. 처리된 PO 출력 ALV 데이터 삭제
    DELETE GT_PO_OUTPUT_ALV WHERE ZCHECKBOX = 'X'.

    MESSAGE '입고 데이터가 성공적으로 저장되었습니다.' TYPE 'S'.
  ELSE.
    MESSAGE '저장된 데이터가 없습니다.' TYPE 'I'.
  ENDIF.

ENDFORM.