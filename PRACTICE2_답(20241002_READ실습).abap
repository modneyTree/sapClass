*&---------------------------------------------------------------------*
*& Report ZEDR00_PRACTICE002
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT ZEDR00_PRACTICE002.
"1. DATA선언
"구조체 , ITAB
DATA : BEGIN OF GS_ZEDT001.
  INCLUDE TYPE ZEDT00_001.
DATA : ZMAJOR_MEMO(8).
DATA : ZGRADE_MEMO(8).
DATA : END OF GS_ZEDT001.

DATA : BEGIN OF GS_ZEDT002.
  INCLUDE TYPE ZEDT00_002.
DATA : END OF GS_ZEDT002.

DATA : BEGIN OF GS_ZEDT003.
  INCLUDE TYPE ZEDT00_003.
DATA : END OF GS_ZEDT003.

DATA : GT_ZEDT001 LIKE TABLE OF GS_ZEDT001.
DATA : GT_ZEDT002 LIKE TABLE OF GS_ZEDT002.
DATA : GT_ZEDT003 LIKE TABLE OF GS_ZEDT003.

DATA : BEGIN OF GS_GENDERSUM,
  ZGENDER LIKE ZEDT00_001-ZGENDER,
  ZGENDERSUM LIKE ZEDT00_002-ZSUM,
END OF GS_GENDERSUM.

DATA : GT_GENDERSUM LIKE TABLE OF GS_GENDERSUM.

"변수
DATA : GV_LINE TYPE I.
DATA : GV_SUM TYPE I.

"2. GET DATA
SELECT * FROM ZEDT00_001
INTO CORRESPONDING FIELDS OF TABLE GT_ZEDT001.

SELECT * FROM ZEDT00_002
INTO CORRESPONDING FIELDS OF TABLE GT_ZEDT002.

SELECT * FROM ZEDT00_003
INTO CORRESPONDING FIELDS OF TABLE GT_ZEDT003.

SORT GT_ZEDT001 BY ZCODE ASCENDING.
SORT GT_ZEDT002 BY ZCODE ASCENDING.
SORT GT_ZEDT003 BY ZCODE ASCENDING ZGRADE DESCENDING.

"3. MODIFY DATA
LOOP AT GT_ZEDT001 INTO GS_ZEDT001.
  CLEAR : GS_ZEDT002, GS_ZEDT003.

*  CLEAR GS_GENDERSUM.
*  GS_GENDERSUM-ZGENDER = GS_ZEDT001-ZGENDER.
*  GS_GENDERSUM-ZGENDERSUM = GS_ZEDT002-ZSUM.
*  COLLECT GS_GENDERSUM INTO GT_GENDERSUM.

  MOVE-CORRESPONDING GS_ZEDT001 TO GS_ZEDT003.

  READ TABLE GT_ZEDT003 WITH KEY ZCODE = GS_ZEDT001-ZCODE
  INTO GS_ZEDT003.

  "성적이 없는 학생은 마스터에서 지우기
  IF SY-SUBRC NE 0. "성적이 없는 학생은 마스터에서 지우기
    DELETE TABLE GT_ZEDT001 FROM GS_ZEDT001.
    CONTINUE.
  ELSE.
    IF ( GS_ZEDT003-ZGRADE = 'D' ) OR ( GS_ZEDT003-ZGRADE = 'F' ) .
      GS_ZEDT001-ZGRADE_MEMO = '학사경고'.
    ELSE.
      CLEAR GS_ZEDT001-ZTEL.
    ENDIF.
  ENDIF.

  READ TABLE GT_ZEDT002 WITH KEY ZCODE = GS_ZEDT003-ZCODE
  INTO GS_ZEDT002 COMPARING ZMAJOR.

  IF GS_ZEDT002-ZMAJOR NE GS_ZEDT003-ZMAJOR.
    GS_ZEDT001-ZMAJOR_MEMO = '전과학생'.
  ENDIF.

  MODIFY GT_ZEDT001 FROM GS_ZEDT001 INDEX SY-TABIX.

  CLEAR GS_GENDERSUM.
  GS_GENDERSUM-ZGENDER = GS_ZEDT001-ZGENDER.
  GS_GENDERSUM-ZGENDERSUM = GS_ZEDT002-ZSUM.
  COLLECT GS_GENDERSUM INTO GT_GENDERSUM.

*  MODIFY GT_ZEDT001 FROM GS_ZEDT001 INDEX SY-TABIX.
ENDLOOP.

DESCRIBE TABLE GT_GENDERSUM LINES GV_LINE.

"4. WRITE DATA
LOOP AT GT_ZEDT001 INTO GS_ZEDT001.
  AT FIRST.
    WRITE :/ '-------------------------------------------------------------------------------------'.
    WRITE :/ '|   학생코드   |      이름      | 학사경고대상  |      전화번호      |      적요    |'.
    WRITE :/ '-------------------------------------------------------------------------------------'.
  ENDAT.

    WRITE :/ '|  ', GS_ZEDT001-ZCODE, '|    ',GS_ZEDT001-ZKNAME,'|',  GS_ZEDT001-ZGRADE_MEMO  ,'     |  ' ,  GS_ZEDT001-ZTEL , '|' ,  GS_ZEDT001-ZMAJOR_MEMO,'    |'.
  WRITE :/ '-------------------------------------------------------------------------------------'.
ENDLOOP.

DO GV_LINE TIMES.
  CLEAR : GV_SUM, GS_GENDERSUM.

  READ TABLE GT_GENDERSUM INTO GS_GENDERSUM  INDEX SY-INDEX.

  GV_SUM = GS_GENDERSUM-ZGENDERSUM * 100.

  IF GS_GENDERSUM-ZGENDER = 'M'.
    WRITE :/ '남학생 등록금 총합' , GV_SUM ,'원'.
  ELSEIF GS_GENDERSUM-ZGENDER = 'F'.
    WRITE :/ '여남학생 등록금 총합' , GV_SUM, '원'.
  ELSE.
    WRITE :/ '데이터 해당 없음'.
  ENDIF.
ENDDO.